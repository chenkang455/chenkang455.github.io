<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on Chenk</title>
    <link>https://chenkang455.github.io/categories/math/</link>
    <description>Recent content in math on Chenk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Mar 2022 20:59:36 +0800</lastBuildDate><atom:link href="https://chenkang455.github.io/categories/math/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最优化作业1</title>
      <link>https://chenkang455.github.io/posts/first/</link>
      <pubDate>Sat, 05 Mar 2022 20:59:36 +0800</pubDate>
      
      <guid>https://chenkang455.github.io/posts/first/</guid>
      <description>第一次作业 黄金分割法求函数 $\phi(x)=1-\alpha e^{-\alpha ^2}$的极小值，区间为[0,1]，$\epsilon = 0.01$。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import matplotlib.pyplot as plt import numpy as np # define the function def f(x): return 1-x*pow(2.718, -x*x) # parameters define left = 0 right = 1 gold_parameter = 0.618 # make graph x_numbers = np.</description>
    </item>
    
    <item>
      <title>最优化作业2</title>
      <link>https://chenkang455.github.io/posts/second/</link>
      <pubDate>Sat, 05 Mar 2022 20:59:36 +0800</pubDate>
      
      <guid>https://chenkang455.github.io/posts/second/</guid>
      <description>第二次作业 阻尼牛顿法 由于运算过程中需要计算函数梯度以及黑塞矩阵，设计一个类来扩充原函数的功能
扩充函数类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import numpy as np class Function: def __init__(self,f,delta) -&amp;gt; None: self.delta = delta self.f = f def cal_val(self,val): return self.f(val) #求偏导 def part_1(self,index,val): #! 不改变原值 val = list(val) # 原函数值 f1 = self.</description>
    </item>
    
  </channel>
</rss>
